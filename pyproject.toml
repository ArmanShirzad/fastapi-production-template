[project]
name = "fastapi-production-template"
version = "2.0.0"
description = "A production-ready FastAPI template with Docker, CI/CD, observability, and one-click deployment"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Arman Shirzad", email = "armanshirzad@example.com"}
]
keywords = ["fastapi", "template", "docker", "production", "observability"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    "fastapi[standard]>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic-settings>=2.0.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.29.0",
    "sentry-sdk[fastapi]>=1.38.0",
    "prometheus-fastapi-instrumentator>=6.1.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/armanshirzad/fastapi-production-template"
Repository = "https://github.com/armanshirzad/fastapi-production-template"
Issues = "https://github.com/armanshirzad/fastapi-production-template/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
target-version = "py312"
line-length = 100
select = ["E", "F", "I", "W", "UP", "N", "S"]
ignore = ["E501", "S101", "S104"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
addopts = "-q --maxfail=1"
testpaths = ["tests"]
asyncio_mode = "auto"
