name: Release
on:
  push:
    tags: ['v*']   # run only on tags like v0.1.4
  workflow_dispatch:
permissions:
  contents: write
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    if: ${{ startsWith(github.ref, 'refs/tags/') && github.repository_owner == github.actor }}
    runs-on: ubuntu-latest
    env:
      SENTRY_DSN: ${{ secrets.SENTRY_DSN || '' }}
    steps:
      - uses: actions/checkout@v4

      # Uses the built-in GITHUB_TOKEN (you do NOT create this in Settings)
      - name: Log in to GHCR
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Compute image name (lowercase)
        id: img
        run: |
          REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "image=ghcr.io/${REPO_LC}" >> "$GITHUB_OUTPUT"

      - name: Build image
        run: |
          docker build \
            -t ${{ steps.img.outputs.image }}:${{ github.ref_name }} \
            -t ${{ steps.img.outputs.image }}:latest .

      - name: Smoke test container health
        run: |
          cid=$(docker run -d -p 8000:8000 ${{ steps.img.outputs.image }}:latest)
          for i in {1..30}; do curl -fsS http://localhost:8000/health && break || sleep 1; done
          docker logs "$cid" --tail 50 || true
          docker rm -f "$cid"

      - name: Push image
        run: |
          docker push ${{ steps.img.outputs.image }}:${{ github.ref_name }}
          docker push ${{ steps.img.outputs.image }}:latest

      - name: Sentry release (optional)
        if: ${{ env.SENTRY_DSN != '' }}
        run: |
          echo "Would run sentry-cli for ${{ github.ref_name }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            See CHANGELOG.md for details.
            Docker image:
            - ${{ steps.img.outputs.image }}:latest
            - ${{ steps.img.outputs.image }}:${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ github.token }}
